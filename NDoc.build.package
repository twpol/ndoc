<?xml version="1.0" ?>
<project name="NDoc-package" xmlnds="http://tempuri.org/nant-vs.xsd">
	<!-- Cleans the current build configuration -->
	<target name="clean-build-dir" depends="check-build-dir" description="Deletes current build configuration">
		<delete dir="${build.dir}" />
	</target>
	<!--

	-->
	<!-- Cleans all build configurations -->
	<target name="clean-all" description="Deletes every build configuration">
		<echo message="Deleting all builds from all configurations" />
		<delete dir="build" />
	</target>
	<!--

	-->
	<!-- Creates a distribution package -->
	<target name="package" depends="check-project-version" description="Build and Package distribution">
		<property name="current.package.zipfile" value="${nant.project.name}-${project.version}.zip" />
		<!-- set flag to indicating that this is a package build -->
		<property name="project.build.package" value="true" readonly="false" />
		<!-- clean the current build directory -->
		<call target="clean-build-dir" force="true" />
		<!-- copies the examples to the current build directory -->
		<call target="package-examples" force="true" />
		<!-- copies the sources to the current build directory -->
		<call target="package-src" force="true" />
		<!-- copies the documentation to the current build directory -->
		<call target="package-doc" force="true" />
		<!-- copies the release files to the current build directory -->
		<call target="package-release-files" force="true" />
		<!-- compile all build configurations for all runtime configurations  -->
		<call target="compile-all" force="true" />
		<!-- create the package distribution zipfile -->
		<call target="create-package-zipfile" force="true" />
	</target>
	<!--

	-->
	<target name="package-examples" depends="check-build-dir">
		<mkdir dir="${build.dir}/examples" />
		<copy todir="${build.dir}/examples">
			<fileset basedir="examples">
				<includes name="*.*" />
			</fileset>
		</copy>
	</target>
	<!--

	-->
	<target name="package-src" depends="check-build-dir">
		<mkdir dir="${build.dir}/src" />
		<copy todir="${build.dir}/src">
			<fileset basedir="src">
				<includes name="**/*" />
				<excludes name="Addins/**" />
				<excludes name="NDocGen/**" />
				<excludes name="Documenter/Msdn7/**" />
				<excludes name="Setup/Debug/**" />
				<excludes name="Setup/Release/**" />
				<excludes name="**/bin/**" />
				<excludes name="**/obj/**" />
				<excludes name="**/*.csproj.user" />
				<excludes name="**/gc.log" />
			</fileset>
		</copy>
	</target>
	<!--

	-->
	<target name="package-doc" depends="check-build-dir">
		<mkdir dir="${build.dir}/doc" />
		<copy todir="${build.dir}/doc">
			<fileset basedir="doc">
				<includes name="**/*.*" />
			</fileset>
		</copy>
	</target>
	<!--

	-->
	<target name="package-release-files" depends="check-build-dir">
		<copy todir="${build.dir}">
			<fileset basedir=".">
				<includes name="COPYING.txt" />
				<includes name="NDoc.build" />
				<includes name="NDoc.build.include" />
				<includes name="README.txt" />
				<includes name="NDoc.sln" />
			</fileset>
		</copy>
	</target>
	<!--

	-->
	<target name="create-package-zipfile" depends="check-build-dir, check-current-package-zipfile">
		<!-- delete the specified zipfile if it already exists -->
		<delete>
			<fileset basedir=".">
				<includes name="${current.package.zipfile}" />
			</fileset>
		</delete>
		<zip zipfile="${current.package.zipfile}" ziplevel="9">
			<fileset basedir="${build.dir}">
				<includes name="**/*" />
				<!-- file created by mono compiler -->
				<excludes name="**/gc.log" />
			</fileset>
		</zip>
	</target>
</project>
