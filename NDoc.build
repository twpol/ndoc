<?xml version="1.0" ?>
<project name="ndoc" default="compile" xmlnds="http://tempuri.org/nant-vs.xsd">
    <!-- Global project settings -->
    <property name="project.name" value="ndoc" />
    <property name="project.version" value="1.3" />
    <property name="project.build.config" value="debug" readonly="false" />
    <property name="project.build.package" value="false" readonly="false" />
    <property name="build.number" value="${math::floor(timespan::get-total-days(datetime::now() - convert::to-datetime('01/01/2000')))}" dynamic="true" />
    <property name="build.dir" value="${nant.project.basedir}/bin"
        readonly="false" />
    <!-- Include helpers -->
    <include buildfile="NDoc.build.include" />
    <include buildfile="NDoc.build.package" />
    <!-- Targets that should always be executed -->
    <call target="set-build-configuration" />
    <call target="set-framework-configuration" />
    <!--

    -->
    <target name="debug" description="Change the build configuration to debug mode.">
        <call target="set-debug-build-configuration" />
    </target>
    <!--

    -->
    <target name="release" description="Change the build configuration to release mode.">
        <call target="set-release-build-configuration" />
    </target>
    <!--

    -->
    <target name="compile-build" description="Compile current build configuration for all supports target frameworks">
        <echo message="Compiling the ${current.build.config} build configuration for all supported target frameworks." />
        <!-- 
            build .NET Framework 1.0 version if both the Framework and SDK are available 
        -->
        <if test="${framework::exists('net-1.0')}">
            <if test="${framework::sdk-exists('net-1.0')}">
                <call target="set-net-1.0-framework-configuration" />
                <call target="compile" />
            </if>
            <if test="${not framework::sdk-exists('net-1.0')}">
                <if test="${property::exists('project.build.package') and project.build.package}">
                    <fail message="The .NET Framework SDK 1.0 is not available." />
                </if>
                <if test="${not property::exists('project.build.package') or not project.build.package}">
                    <echo message="The .NET Framework SDK 1.0 is not available. Build skipped." />
                </if>
            </if>
        </if>
        <if test="${not framework::exists('net-1.0')}">
            <if test="${property::exists('project.build.package') and project.build.package}">
                <fail message="The .NET Framework 1.0 is not available." />
            </if>
            <if test="${not property::exists('project.build.package') or not project.build.package}">
                <echo message="The .NET Framework 1.0 is not available. Build skipped." />
            </if>
        </if>
        <!-- 
            build .NET Framework 1.1 version if both Framework and SDK are available 
        -->
        <if test="${framework::exists('net-1.1')}">
            <if test="${framework::sdk-exists('net-1.1')}">
                <call target="set-net-1.1-framework-configuration" />
                <call target="compile" />
            </if>
            <if test="${not framework::sdk-exists('net-1.1')}">
                <if test="${property::exists('project.build.package') and project.build.package}">
                    <fail message="The .NET Framework SDK 1.1 is not available." />
                </if>
                <if test="${not property::exists('project.build.package') or not project.build.package}">
                    <echo message="The .NET Framework SDK 1.1 is not available. Build skipped." />
                </if>
            </if>
        </if>
        <if test="${not framework::exists('net-1.1')}">
            <if test="${property::exists('project.build.package') and project.build.package}">
                <fail message="The .NET Framework 1.1 is not available." />
            </if>
            <if test="${not property::exists('project.build.package') or not project.build.package}">
                <echo message="The .NET Framework 1.1 is not available. Build skipped." />
            </if>
        </if>
        <!-- 
            build Mono 1.0 version if both Framework and SDK are available 
        -->
        <if test="${framework::exists('mono-1.0')}">
            <if test="${framework::sdk-exists('mono-1.0')}">
                <call target="set-mono-1.0-framework-configuration" />
                <call target="compile" />
            </if>
            <if test="${not framework::sdk-exists('mono-1.0')}">
                <if test="${property::exists('project.build.package') and project.build.package}">
                    <fail message="The Mono SDK 1.0 is not available." />
                </if>
                <if test="${not property::exists('project.build.package') or not project.build.package}">
                    <echo message="The Mono SDK 1.0 is not available. Build skipped." />
                </if>
            </if>
        </if>
        <if test="${not framework::exists('mono-1.0')}">
            <if test="${property::exists('project.build.package') and project.build.package}">
                <fail message="Mono 1.0 is not available." />
            </if>
            <if test="${not property::exists('project.build.package') or not project.build.package}">
                <echo message="Mono 1.0 is not available. Build skipped." />
            </if>
        </if>
    </target>
    <!--

    -->
    <target name="compile" description="Builds the current build configuration for the current target framework." depends="create-common-assemblyinfo">
        <!-- ensure the bin dir has been created, and clean it up if needed -->
        <call target="clean-current-bin-dir" />
        <!-- copy the ndoc signing key file to the bin dir -->
        <copy file="${nant.project.basedir}/NDoc.snk" todir="${current.bin.dir}" />
	    <!-- temporary workaround for Mono bug #55320 (which is fixed in cvs) -->
	    <copy file="NDoc.snk" todir="src/Core" />
	    <copy file="NDoc.snk" todir="src/Console" />
	    <copy file="NDoc.snk" todir="src/VisualStudio" />
	    <copy file="NDoc.snk" todir="src/Gui" />
	    <copy file="NDoc.snk" todir="src/Documenter/Msdn" />
	    <copy file="NDoc.snk" todir="src/Documenter/JavaDoc" />
	    <copy file="NDoc.snk" todir="src/Documenter/Latex" />
	    <copy file="NDoc.snk" todir="src/Documenter/LinearHtml" />
	    <copy file="NDoc.snk" todir="src/Documenter/NativeHtmlHelp2" />
	    <copy file="NDoc.snk" todir="src/Documenter/Xml" />
	    <copy file="NDoc.snk" todir="src/Test" />
        <!-- build all projects -->
        <nant buildfile="src/Core/Core.build" target="compile" inheritall="true" />
        <nant buildfile="src/Console/Console.build" target="compile" inheritall="true" />
        <nant buildfile="src/VisualStudio/VisualStudio.build" target="compile" inheritall="true" />
        <nant buildfile="src/Gui/Gui.build" target="compile" inheritall="true" />
        <nant buildfile="src/Documenter/Msdn/Msdn.build" target="compile" inheritall="true" />
        <nant buildfile="src/Documenter/JavaDoc/JavaDoc.build" target="compile" inheritall="true" />
        <nant buildfile="src/Documenter/Latex/Latex.build" target="compile" inheritall="true" />
        <nant buildfile="src/Documenter/LinearHtml/LinearHtml.build" target="compile" inheritall="true" />
        <nant buildfile="src/Documenter/NativeHtmlHelp2/NativeHtmlHelp2.build" target="compile" inheritall="true" />
        <nant buildfile="src/Documenter/Xml/Xml.build" target="compile" inheritall="true" />
        <nant buildfile="src/Test/Test.build" target="compile" inheritall="true"  />
	    <!-- temporary workaround for Mono bug #55320 (which is fixed in cvs) -->
	    <delete>
	        <fileset>
	            <includes name="src/**/NDoc.snk" />
	        </fileset>
        </delete>	        
        <!-- remove the ndoc signing key file -->
        <delete file="${current.bin.dir}/NDoc.snk" />
    </target>
    <target name="create-common-assemblyinfo">
        <!-- ensure src/CommonAssemblyInfo.cs is writable if it already exists -->
        <attrib file="src/CommonAssemblyInfo.cs" readonly="false" if="${file::exists('src/CommonAssemblyInfo.cs')}" />
        <!-- generate the source file holding the common assembly-level attributes -->
        <asminfo output="src/CommonAssemblyInfo.cs" language="CSharp">
            <imports>
                <import name="System" />
                <import name="System.Reflection" />
                <import name="System.Runtime.InteropServices" />
            </imports>
            <attributes>
                <attribute type="ComVisibleAttribute" value="false"/>
                <attribute type="CLSCompliantAttribute" value="true" />
                <attribute type="AssemblyConfigurationAttribute" value="${framework::get-target-framework()}.${platform::get-name()}; beta" />
                <attribute type="AssemblyCompanyAttribute" value="http://ndoc.sourceforge.net" />
                <attribute type="AssemblyProductAttribute" value="NDoc" />
                <attribute type="AssemblyCopyrightAttribute" value="" />
                <attribute type="AssemblyTrademarkAttribute" value="" />
                <attribute type="AssemblyCultureAttribute" value="" />
                <attribute type="AssemblyVersionAttribute" value="${project.version}.${build.number}.0" />
                <attribute type="AssemblyInformationalVersionAttribute" value="${project.version}" />
            </attributes>
        </asminfo>
    </target>
</project>
