<?xml version="1.0" ?>
<project name="ndoc" default="compile-release" xmlnds="http://tempuri.org/nant-vs.xsd">
	<!-- Global project settings -->
	<property name="project.name" value="ndoc" />
	<property name="project.version" value="1.3" />
	<property name="project.build.config" value="debug" readonly="false" />
	<property name="project.build.package" value="false" readonly="false" />
	<property name="build.dir" value="${nant.project.basedir}/bin"
		readonly="false" />
	<!-- Include helpers -->
	<include buildfile="NDoc.build.include" />
	<include buildfile="NDoc.build.package" />
	<!-- Targets that should always be executed -->
	<call target="set-build-configuration" />
	<call target="set-framework-configuration" />
	<!--

	-->
	<target name="debug" description="Change the build configuration to debug mode.">
		<call target="set-debug-build-configuration" />
	</target>
	<!--

	-->
	<target name="release" description="Change the build configuration to release mode.">
		<call target="set-release-build-configuration" />
	</target>
	<!--

	-->
	<target name="compile-build" description="Compile current build configuration for all supports target frameworks">
		<echo message="Compiling the ${current.build.config} build configuration for all supported target frameworks." />
		<!-- 
			build .NET Framework 1.0 version if both the Framework and SDK are available 
		-->
		<if test="${framework::exists('net-1.0')}">
			<if test="${framework::sdk-exists('net-1.0')}">
				<call target="set-net-1.0-framework-configuration" />
				<call target="compile" />
			</if>
			<if test="${not framework::sdk-exists('net-1.0')}">
				<if test="${property::exists('project.build.package') and project.build.package}">
					<fail message="The .NET Framework SDK 1.0 is not available." />
				</if>
				<if test="${not property::exists('project.build.package') or not project.build.package}">
					<echo message="The .NET Framework SDK 1.0 is not available. Build skipped." />
				</if>
			</if>
		</if>
		<if test="${not framework::exists('net-1.0')}">
			<if test="${property::exists('project.build.package') and project.build.package}">
				<fail message="The .NET Framework 1.0 is not available." />
			</if>
			<if test="${not property::exists('project.build.package') or not project.build.package}">
				<echo message="The .NET Framework 1.0 is not available. Build skipped." />
			</if>
		</if>
		<!-- 
			build .NET Framework 1.1 version if both Framework and SDK are available 
		-->
		<if test="${framework::exists('net-1.1')}">
			<if test="${framework::sdk-exists('net-1.1')}">
				<call target="set-net-1.1-framework-configuration" />
				<call target="compile" />
			</if>
			<if test="${not framework::sdk-exists('net-1.1')}">
				<if test="${property::exists('project.build.package') and project.build.package}">
					<fail message="The .NET Framework SDK 1.1 is not available." />
				</if>
				<if test="${not property::exists('project.build.package') or not project.build.package}">
					<echo message="The .NET Framework SDK 1.1 is not available. Build skipped." />
				</if>
			</if>
		</if>
		<if test="${not framework::exists('net-1.1')}">
			<if test="${property::exists('project.build.package') and project.build.package}">
				<fail message="The .NET Framework 1.1 is not available." />
			</if>
			<if test="${not property::exists('project.build.package') or not project.build.package}">
				<echo message="The .NET Framework 1.1 is not available. Build skipped." />
			</if>
		</if>
		<!-- 
			build Mono 1.0 version if both Framework and SDK are available 
		-->
		<if test="${framework::exists('mono-1.0')}">
			<if test="${framework::sdk-exists('mono-1.0')}">
				<call target="set-mono-1.0-framework-configuration" />
				<call target="compile" />
			</if>
			<if test="${not framework::sdk-exists('mono-1.0')}">
				<if test="${property::exists('project.build.package') and project.build.package}">
					<fail message="The Mono SDK 1.0 is not available." />
				</if>
				<if test="${not property::exists('project.build.package') or not project.build.package}">
					<echo message="The Mono SDK 1.0 is not available. Build skipped." />
				</if>
			</if>
		</if>
		<if test="${not framework::exists('mono-1.0')}">
			<if test="${property::exists('project.build.package') and project.build.package}">
				<fail message="Mono 1.0 is not available." />
			</if>
			<if test="${not property::exists('project.build.package') or not project.build.package}">
				<echo message="Mono 1.0 is not available. Build skipped." />
			</if>
		</if>
	</target>
	<!--

	-->
	<target name="compile" description="Builds the current build configuration for the current target framework.">
		<!-- ensure the bin dir has been created, and clean it up if needed -->
		<call target="clean-current-bin-dir" />
		<!-- copy the ndoc signing key file to the bin dir -->
		<copy file="${nant.project.basedir}/src/ndoc.snk" todir="${current.bin.dir}" />
		<!-- build all projects -->
		<nant buildfile="src/Core/Core.build" target="compile" inheritall="true" />
		<nant buildfile="src/Console/Console.build" target="compile" inheritall="true" />
		<nant buildfile="src/VisualStudio/VisualStudio.build" target="compile" inheritall="true" />
		<nant buildfile="src/Gui/Gui.build" target="compile" inheritall="true" />
		<nant buildfile="src/Documenter/Msdn/Msdn.build" target="compile" inheritall="true" />
		<nant buildfile="src/Documenter/HtmlHelp2/HtmlHelp2.build" target="compile" inheritall="true" />
		<nant buildfile="src/Documenter/JavaDoc/JavaDoc.build" target="compile" inheritall="true" />
		<nant buildfile="src/Documenter/Latex/Latex.build" target="compile" inheritall="true" />
		<nant buildfile="src/Documenter/LinearHtml/LinearHtml.build" target="compile" inheritall="true" />
		<nant buildfile="src/Documenter/NativeHtmlHelp2/NativeHtmlHelp2.build" target="compile" inheritall="true" />
		<nant buildfile="src/Documenter/Xml/Xml.build" target="compile" inheritall="true" />
		<nant buildfile="src/Test/Test.build" target="compile" inheritall="true" if="${framework::get-family(framework::get-target-framework())='net'}" />
		<!-- remove the ndoc signing key file -->
		<delete file="${current.bin.dir}/ndoc.snk" />
	</target>
</project>
