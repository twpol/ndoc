<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NDocGui</name>
    </assembly>
    <members>
        <member name="T:NDoc.Gui.ErrorForm">
            <summary>
            Form used to display errors to the user
            </summary>
        </member>
        <member name="F:NDoc.Gui.ErrorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NDoc.Gui.ErrorForm.ShowError(System.String,System.Exception,System.Windows.Forms.Control)">
            <summary>
            Show the ErrorForm
            </summary>
            <param name="message">A message to display</param>
            <param name="ex">The exception to display</param>
            <param name="parent">The parent control</param>
        </member>
        <member name="M:NDoc.Gui.ErrorForm.ShowError(System.Exception,System.Windows.Forms.Control)">
            <summary>
            Show the ErrorForm
            </summary>
            <param name="ex">The exception to display</param>
            <param name="parent">The parent control</param>
        </member>
        <member name="M:NDoc.Gui.ErrorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NDoc.Gui.ErrorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NDoc.Gui.AssemblyListControl">
            <summary>
            Control that displays the Assemblies in a project
            </summary>
        </member>
        <member name="M:NDoc.Gui.AssemblyListControl.#ctor">
            <summary>
            Creates an isntance of the class
            </summary>
        </member>
        <member name="M:NDoc.Gui.AssemblyListControl.Refresh">
            <summary>
            See <see cref="M:System.Windows.Forms.Control.Refresh"/>
            </summary>
        </member>
        <member name="M:NDoc.Gui.AssemblyListControl.deleteButton_Click(System.Object,System.EventArgs)">
            <summary>
            Removes the selected assembly and /doc file pair from the listview.
            </summary>
            <remarks>
            If the row being deleted was the only one left in the listview then
            the documentation buttons are disabled.
            </remarks>
            <param name="sender">The sender (not used).</param>
            <param name="e">The event arguments (not used).</param>
        </member>
        <member name="M:NDoc.Gui.AssemblyListControl.OnEditNamespaces">
            <summary>
            Raises the <see cref="E:NDoc.Gui.AssemblyListControl.EditNamespaces"/> event
            </summary>
        </member>
        <member name="M:NDoc.Gui.AssemblyListControl.namespaceSummariesButton_Click(System.Object,System.EventArgs)">
            <summary>
            Brings up the form for entering namespace summaries.
            </summary>
            <remarks>
            Calls XmlDocumenter to build an XML file documenting the assemblies
            currently in the project.  This file is used to discover all of the
            namespaces currently being documented in case any new ones have been
            added.  A <see cref="T:System.Collections.Hashtable"/> with the namespace
            names as keys and any existing summaries as values is passed in to
            a form which allows editing of the namespace summaries.  If the ok button
            is selected in the form then the Hashtable becomes the main one used by
            NDoc and passed into documenters for building documentation.
            </remarks>
            <param name="sender">The sender (not used).</param>
            <param name="e">The event arguments (not used).</param>
        </member>
        <member name="M:NDoc.Gui.AssemblyListControl.OnDetailsViewChanged">
            <summary>
            Raises the <see cref="E:NDoc.Gui.AssemblyListControl.DetailsViewChanged"/> event
            </summary>
        </member>
        <member name="P:NDoc.Gui.AssemblyListControl.AssemblySlashDocs">
            <summary>
            Gets the collection of assemblies and documentation comment XML files in the project.
            </summary>
            <value>An <see cref="T:NDoc.Core.AssemblySlashDocCollection"/>.</value>
        </member>
        <member name="E:NDoc.Gui.AssemblyListControl.EditNamespaces">
            <summary>
            Event raised when the "Edit Namespace" button is clicked
            </summary>
        </member>
        <member name="E:NDoc.Gui.AssemblyListControl.DetailsViewChanged">
            <summary>
            Event raised when the <see cref="P:NDoc.Gui.AssemblyListControl.DetailsView"/> property changes
            </summary>
        </member>
        <member name="P:NDoc.Gui.AssemblyListControl.DetailsView">
            <summary>
            Determines if the ListView is in report or list mode
            </summary>
        </member>
        <member name="T:NDoc.Gui.TextBoxWriter">
            <summary>
            A <see cref="T:System.IO.TextWriter"/> that writes to a text box
            </summary>
        </member>
        <member name="M:NDoc.Gui.TextBoxWriter.#ctor(System.Windows.Forms.TextBoxBase)">
            <summary>
            creates a new instance of the class
            </summary>
            <param name="b">The <see cref="T:System.Windows.Forms.TextBoxBase"/> that will be written to</param>
        </member>
        <member name="M:NDoc.Gui.TextBoxWriter.Write(System.String)">
            <summary>
            Write a string to the trace window
            </summary>
            <param name="message">The string to write</param>
        </member>
        <member name="M:NDoc.Gui.TextBoxWriter.WriteLine(System.String)">
            <summary>
            Writes a string and a new line to the text box
            </summary>
            <param name="message">The string to write</param>
        </member>
        <member name="P:NDoc.Gui.TextBoxWriter.Encoding">
            <summary>
            Get's the encoding of the stream
            </summary>
        </member>
        <member name="T:NDoc.Gui.App">
            <summary>
            Static class with the Main method and application properties
            </summary>
        </member>
        <member name="M:NDoc.Gui.App.Main(System.String[])">
            <summary>
            Application entry point
            </summary>
            <param name="args">Command line arguments</param>
        </member>
        <member name="M:NDoc.Gui.App.GetSourceTreePath(System.String)">
            <summary>
            Returns a path to a file based resource that
            is sompatible with the source tree structure, rather than the
            deploymeed strucutre
            </summary>
            <param name="fileName">The file to build a path for</param>
            <returns>Relative path to the file in the source tree</returns>
        </member>
        <member name="M:NDoc.Gui.App.GetInnermostException(System.Exception)">
            <summary>
            Given an <see cref="T:System.Exception"/> returns the deepest
            non-null InnerException
            </summary>
            <param name="e">The top Exception</param>
            <returns>The innermost Exception</returns>
        </member>
        <member name="M:NDoc.Gui.App.DumpException(System.Text.StringBuilder,System.Exception)">
            <summary>
            Streams an exception
            </summary>
            <param name="strBld">A StringBuilder to hold the exception details</param>
            <param name="ex">The Exception</param>
        </member>
        <member name="M:NDoc.Gui.App.BuildTraceError(System.Exception)">
            <summary>
            Dumps the details of an exception to the Trace window
            </summary>
            <param name="ex">The Exception</param>
        </member>
        <member name="P:NDoc.Gui.App.WebSiteUri">
            <summary>
            The NDoc SourceForge URI
            </summary>
        </member>
        <member name="P:NDoc.Gui.App.RuntimeLocation">
            <summary>
            The location where the application is running 
            </summary>
        </member>
        <member name="P:NDoc.Gui.App.LicenseFilePath">
            <summary>
            The path to the license file
            </summary>
        </member>
        <member name="P:NDoc.Gui.App.HelpFilePath">
            <summary>
            The path to the help file
            </summary>
        </member>
        <member name="T:NDoc.Gui.OptionsForm">
            <summary>
            Form to view and set applicatio options
            </summary>
        </member>
        <member name="F:NDoc.Gui.OptionsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NDoc.Gui.OptionsForm.#ctor">
            <summary>
            Creates a new instance of the OptionsForm class
            </summary>
        </member>
        <member name="M:NDoc.Gui.OptionsForm.#ctor(NDoc.Gui.NDocOptions)">
            <summary>
            Creates a new instance of the OptionsForm class
            </summary>
            <param name="o">An options object to display</param>
        </member>
        <member name="M:NDoc.Gui.OptionsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NDoc.Gui.OptionsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:NDoc.Gui.OptionsForm.Options">
            <summary>
            Returns the Options
            </summary>
        </member>
        <member name="T:NDoc.Gui.NDocOptions">
            <summary>
            Configurable application settings
            </summary>
        </member>
        <member name="M:NDoc.Gui.NDocOptions.#ctor">
            <summary>
            Creates a new instance of the NDocOptions class
            </summary>
        </member>
        <member name="M:NDoc.Gui.NDocOptions.Clone">
            <summary>
            Create a clone of this object
            </summary>
            <returns>The clone</returns>
        </member>
        <member name="P:NDoc.Gui.NDocOptions.ShowProgressOnBuild">
            <summary>
            Get/Set the ShowProgressOnBuild property
            </summary>
        </member>
        <member name="P:NDoc.Gui.NDocOptions.LoadLastProjectOnStart">
            <summary>
            Get/Set the LoadLastProjectOnStart property
            </summary>
        </member>
        <member name="P:NDoc.Gui.NDocOptions.HtmlHelpWorkshopLocation">
            <summary>
            Get/Set the HtmlHelpWorkshopLocation property
            </summary>
        </member>
        <member name="P:NDoc.Gui.NDocOptions.MRUSize">
            <summary>
            Get/Set the MRUSize property
            </summary>
        </member>
        <member name="T:NDoc.Gui.IBuildStatus">
            <summary>
            Interface for receiving status notification during a build
            </summary>
        </member>
        <member name="M:NDoc.Gui.IBuildStatus.BuildException(System.Exception)">
            <summary>
            An exception occurred during the build
            </summary>
            <param name="e">The exception</param>
        </member>
        <member name="M:NDoc.Gui.IBuildStatus.BuildComplete">
            <summary>
            The build is completed
            </summary>
            <remarks>This is called on succes, failure and cancellation</remarks>
        </member>
        <member name="M:NDoc.Gui.IBuildStatus.BuildCancelled">
            <summary>
            Called when the build is cancelled
            </summary>
        </member>
        <member name="M:NDoc.Gui.IBuildStatus.ReportProgress(NDoc.Core.ProgressArgs)">
            <summary>
            Reports build progress
            </summary>
            <param name="e">Build progress arguments</param>
        </member>
        <member name="T:NDoc.Gui.WarningForm">
            <summary>
            Form used to diaply warning messages to the user
            </summary>
        </member>
        <member name="F:NDoc.Gui.WarningForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NDoc.Gui.WarningForm.ShowWarning(System.String,System.String,System.Windows.Forms.Control)">
            <summary>
            Shows the warning form
            </summary>
            <param name="title">The Form's title</param>
            <param name="message">The warning</param>
            <param name="parent">The Form's parent</param>
        </member>
        <member name="M:NDoc.Gui.WarningForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NDoc.Gui.WarningForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NDoc.Gui.TraceWindowControl">
            <summary>
            TraceWindow is a class that will connect to trace events and display trace outputs in a text box
            </summary>
        </member>
        <member name="M:NDoc.Gui.TraceWindowControl.#ctor">
            <summary>
            Creates a new instance of the TraceWindowControl class
            </summary>
        </member>
        <member name="M:NDoc.Gui.TraceWindowControl.Clear">
            <summary>
            Clears the contents of the window
            </summary>
        </member>
        <member name="M:NDoc.Gui.TraceWindowControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NDoc.Gui.TraceWindowControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NDoc.Gui.TraceWindowControl.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the VisibleChanged event
            </summary>
            <param name="e">event arguments</param>
        </member>
        <member name="M:NDoc.Gui.TraceWindowControl.Connect">
            <summary>
            Connects the control to trace events
            </summary>
        </member>
        <member name="M:NDoc.Gui.TraceWindowControl.Disconnect">
            <summary>
            Disconnects the control from trace events
            </summary>
        </member>
        <member name="M:NDoc.Gui.TraceWindowControl.OnCloseClick">
            <summary>
            Raises the <see cref="E:NDoc.Gui.TraceWindowControl.CloseClick"/> event
            </summary>
        </member>
        <member name="P:NDoc.Gui.TraceWindowControl.Text">
            <summary>
            Gets/Set the window caption
            </summary>
        </member>
        <member name="P:NDoc.Gui.TraceWindowControl.TraceText">
            <summary>
            Gets/Sets the test displayed in the trace window
            </summary>
        </member>
        <member name="P:NDoc.Gui.TraceWindowControl.AutoConnect">
            <summary>
            Determines whether the control will connect to trace events when it becomes visible, and disconnect when it is hidden
            </summary>
        </member>
        <member name="E:NDoc.Gui.TraceWindowControl.CloseClick">
            <summary>
            Raised when the close button is clicked
            </summary>
        </member>
        <member name="T:NDoc.Gui.SolutionForm">
            <summary>
            Summary description for SolutionForm.
            </summary>
        </member>
        <member name="F:NDoc.Gui.SolutionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NDoc.Gui.SolutionForm.#ctor">
            <summary>
            Initializes a new instance of the SolutionForm class.
            </summary>
        </member>
        <member name="M:NDoc.Gui.SolutionForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NDoc.Gui.SolutionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:NDoc.Gui.SolutionForm.ConfigList">
            <summary>
            Listbox of solution's configurations.
            </summary>
        </member>
        <member name="T:NDoc.Gui.BuildWorker">
            <summary>
            Class that manages the build thread and status notification
            </summary>
        </member>
        <member name="M:NDoc.Gui.BuildWorker.#ctor(NDoc.Gui.IBuildStatus)">
            <summary>
            Creates a new instance of the class
            </summary>
            <param name="status">A status sink for build notifications</param>
        </member>
        <member name="M:NDoc.Gui.BuildWorker.Build(NDoc.Core.IDocumenter,NDoc.Core.Project)">
            <summary>
            Builds the project using the specified <see cref="T:NDoc.Core.IDocumenter"/>
            </summary>
            <param name="documenter">The <see cref="T:NDoc.Core.IDocumenter"/> to use</param>
            <param name="project">The <see cref="T:NDoc.Core.Project"/> to build</param>
        </member>
        <member name="M:NDoc.Gui.BuildWorker.Cancel">
            <summary>
            Cancels the build
            </summary>
        </member>
        <member name="P:NDoc.Gui.BuildWorker.IsBuilding">
            <summary>
            Return true if the build thread is active
            </summary>
        </member>
        <member name="T:NDoc.Gui.WaitCursor">
            <summary>
            Manages the wait cursor
            </summary>
        </member>
        <member name="M:NDoc.Gui.WaitCursor.#ctor(System.Windows.Forms.Control)">
            <summary>
            Constructing this class casues the cursor to be set to the wait cursor
            and resets it at disposal
            </summary>
            <param name="parent">The control whose cursor to set</param>
        </member>
        <member name="M:NDoc.Gui.WaitCursor.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Cursor)">
            <summary>
            Constructing this class casues the cursor to be set to the specified cursor
            and resets it at disposal
            </summary>
            <param name="parent">The control whose cursor to set</param>
            <param name="cursor">The cursor</param>
        </member>
        <member name="M:NDoc.Gui.WaitCursor.Dispose">
            <summary>
            Restores the cursor to the default
            </summary>
        </member>
        <member name="T:NDoc.Gui.MainForm">
            <summary>The main application form.</summary>
            <remarks>The main application form contains a listview that holds
            assembly and /doc file pairs. You can add, edit, or delete a row
            in the listview. You can document multiple assemblies at one time.
            <para>NDoc provides for dynamic recognition of available
            documenters.  It locates any available assemblies that are capable
            of creating documentation by searching the directory for any
            assemblies that contain a class that derives from
            <see cref="T:NDoc.Core.IDocumenter"/> which is defined in the NDoc.Core
            namespace.</para>
            <para>Currently there are 3 documenters supplied with NDoc:
            <list type="bullet">
            <item><term>Msdn</term><description>Compiled HTML Help like the
            .NET Framework SDK.</description></item>
            <item><term>JavaDoc</term><description>JavaDoc-like html
            documentation.</description></item>
            <item><term>Xml</term><description>An XML file containing the
            full documentation.</description></item>
            </list>
            </para>
            <para>NDoc allows you to save documentation projects. NDoc project
            files have the .ndoc extension.</para>
            <para>The bottom part of the main application form contains
            a property grid.  You can edit the properties of the selected
            documenter via this property grid.</para>
            </remarks>
        </member>
        <member name="M:NDoc.Gui.MainForm.#ctor(System.String)">
            <summary>Initializes the main application form, locates
            available documenters, and sets up the menus.</summary>
            <remarks>NDoc project files have a .ndoc extension which
            could be a registered file type in the system.  If a .ndoc
            project file is double-clicked from explorer then the NDoc
            application is called and passed the project file as a command line
            argument.  This project filename will get passed into this
            constructor.  If no project filename is passed in then the
            constructor selects the most recently used project file (from
            the MRU list that's stored in the NDoc configuration file) and
            initializes the main application form using the information
            in that project file.</remarks>
            <param name="startingProjectFilename">A project filename passed
            in as an argument to the NDoc application.</param>
        </member>
        <member name="M:NDoc.Gui.MainForm.OnLoad(System.EventArgs)">
            <summary>
            See <see cref="M:System.Windows.Forms.UserControl.OnLoad(System.EventArgs)"/>
            </summary>
            <param name="e">event arguments</param>
        </member>
        <member name="M:NDoc.Gui.MainForm.InitializeComponent">
            <summary>
               Required method for Designer support - do not modify
               the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NDoc.Gui.MainForm.EnableMenuItems(System.Boolean)">
            <summary>
            Enables/disables the Save and SaveAs menu items.
            </summary>
            <param name="bEnable"><b>true</b> for enabling the menu items, <b>false</b> for disabling.</param>
        </member>
        <member name="M:NDoc.Gui.MainForm.EnableAssemblyItems">
            <summary>
            Enable/disable the buttons in the GUI based on whether there any assemblies to document.
            </summary>
        </member>
        <member name="M:NDoc.Gui.MainForm.MakeMRUMenu">
            <summary>
            Clears and recreates the most recently used files (MRU) menu.
            </summary>
        </member>
        <member name="M:NDoc.Gui.MainForm.UpdateMRUList">
            <summary>
            Updates the MRU menu to reflect the project that was just opened.
            </summary>
        </member>
        <member name="M:NDoc.Gui.MainForm.ReadConfig">
            <summary>Reads in the NDoc configuration file from the
            application directory.</summary>
            <remarks>The config file stores the most recently used (MRU)
            list of project files.  It also stores which documenter was
            being used last.</remarks>
        </member>
        <member name="M:NDoc.Gui.MainForm.WriteConfig">
            <summary>Writes out the NDoc configuration file to the
            application directory.</summary>
            <remarks>The config file stores the most recently used (MRU)
            list of project files.  It also stores which documenter was
            being used last.</remarks>
        </member>
        <member name="M:NDoc.Gui.MainForm.menuFileNewItem_Click(System.Object,System.EventArgs)">
            <summary>
            Resets NDoc to an empty project by calling <see cref="M:NDoc.Gui.MainForm.Clear"/>.
            </summary>
            <param name="sender">The File-&gt;New menu item (not used).</param>
            <param name="e">Event arguments (not used).</param>
            <seealso cref="M:NDoc.Gui.MainForm.Clear"/>
        </member>
        <member name="M:NDoc.Gui.MainForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>Prompts the user to save the project if it's dirty.</summary>
            <param name="e">Cancel args</param>
        </member>
        <member name="M:NDoc.Gui.MainForm.OnClosed(System.EventArgs)">
            <summary>
            Writes app configuration file
            </summary>
            <param name="e">args</param>
        </member>
        <member name="M:NDoc.Gui.MainForm.menuViewLicense_Click(System.Object,System.EventArgs)">
            <summary>
            Opens the license file in its associates application.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:NDoc.Gui.MainForm.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles drag enter and raises the DragEnter event
            </summary>
            <param name="drgevent">Drag arguments</param>
        </member>
        <member name="M:NDoc.Gui.MainForm.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Handles drag drop and raises the DragDrop event
            </summary>
            <param name="drgevent">Drag arguments</param>
        </member>
        <member name="M:NDoc.Gui.MainForm.BuildException(System.Exception)">
            <summary>
            Called from teh build worker when an exception occurs
            </summary>
            <param name="e">The exception</param>
        </member>
        <member name="M:NDoc.Gui.MainForm.BuildComplete">
            <summary>
            Called from the build worker when the build is complete
            </summary>
            <remarks>This method is called regardless if the build is successful or not</remarks>
        </member>
        <member name="M:NDoc.Gui.MainForm.BuildCancelled">
            <summary>
            Called from teh build worker when the build is aborted
            </summary>
        </member>
        <member name="M:NDoc.Gui.MainForm.ReportProgress(NDoc.Core.ProgressArgs)">
            <summary>
            Receives progress reporting
            </summary>
            <param name="e">progress arguments</param>
        </member>
        <member name="T:NDoc.Gui.DropFileType">
            <summary>
            The type of files that can be dropped
            </summary>
        </member>
        <member name="F:NDoc.Gui.DropFileType.Assembly">
            <summary>
            One or more assemblies (dll or exe)
            </summary>
        </member>
        <member name="F:NDoc.Gui.DropFileType.Project">
            <summary>
            An .ndoc project file
            </summary>
        </member>
        <member name="F:NDoc.Gui.DropFileType.Unsupported">
            <summary>
            Any other file type
            </summary>
        </member>
        <member name="T:NDoc.Gui.DragDropHandler">
            <summary>
            Handles drap and drop operations
            </summary>
        </member>
        <member name="M:NDoc.Gui.DragDropHandler.CanDrop(System.String[])">
            <summary>
            Determines if the list of files is a list of assemblies
            </summary>
            <param name="files">File list</param>
            <returns>True if all the files are dll's or exe's</returns>
        </member>
        <member name="M:NDoc.Gui.DragDropHandler.GetAssemblySlashDocs(System.String[])">
            <summary>
            Create a collection of <see cref="T:NDoc.Core.AssemblySlashDoc"/> objects
            </summary>
            <param name="files">An arrray of assembly files names</param>
            <returns>Populated collection</returns>
        </member>
        <member name="M:NDoc.Gui.DragDropHandler.GetProjectFilePath(System.String[])">
            <summary>
            Gets the path to a NDoc file project from the dropped files list
            </summary>
            <param name="files">The files dropped</param>
            <returns>The path stored in the first location or the files array</returns>
        </member>
        <member name="T:NDoc.Gui.AboutForm">
            <summary>
            Summary description for AboutForm.
            </summary>
        </member>
        <member name="F:NDoc.Gui.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NDoc.Gui.AboutForm.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NDoc.Gui.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NDoc.Gui.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NDoc.Gui.NamespaceSummariesForm">
            <summary>
               Summary description for NamespaceSummariesForm.
            </summary>
        </member>
        <member name="F:NDoc.Gui.NamespaceSummariesForm.cancelButton">
            <summary>
               Required designer variable.
            </summary>
        </member>
        <member name="M:NDoc.Gui.NamespaceSummariesForm.#ctor(NDoc.Core.Project)">
            <summary>Allows the user to associate a summaries with the
            namespaces found in the assemblies that are being 
            documented.</summary>
        </member>
        <member name="M:NDoc.Gui.NamespaceSummariesForm.InitializeComponent">
            <summary>
               Required method for Designer support - do not modify
               the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NDoc.Gui.NamespaceSummariesForm.okButton_Click(System.Object,System.EventArgs)">
            <summary>
            Saves the summary text for the currently selected namespace
            before exiting the form.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NDoc.Gui.NamespaceSummariesForm.namespaceComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Saves the currently entered text with the appropriate namespace
            and then puts the newly selected namespace's summary in the edit box.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:NDoc.Gui.AssemblySlashDocForm">
            <summary>
               This form allows the user to select an assembly and it's matching /doc file.
            </summary>
        </member>
        <member name="M:NDoc.Gui.AssemblySlashDocForm.#ctor">
            <summary>Initializes a new instance of the AssemblySlashDocForm class.</summary>
        </member>
        <member name="M:NDoc.Gui.AssemblySlashDocForm.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:NDoc.Gui.AssemblySlashDocForm.InitializeComponent">
            <summary>
               Required method for Designer support - do not modify
               the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:NDoc.Gui.AssemblySlashDocForm.AssySlashDoc">
            <summary>
            Gets or sets the AssemblySlashDoc.
            </summary>
            <value></value>
        </member>
    </members>
</doc>
