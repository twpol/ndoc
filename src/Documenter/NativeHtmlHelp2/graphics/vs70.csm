; VERSION 7.1.2142

; Customized Style Map for use with Developer Tools User Education Docs
; Requires Spider ver. 2.211 or later



; ==================================================================
; Specifies the styles for the 'CSM boilerplate'
; Used here with proper boilerplate to create the non-scrolling region

boiler("h1" "h2" "h3" "h4" "h5" "h6")

; ==================================================================
; Paragraph Styles for Headings

style(h1)	{ elem = h1 toc = 1 .class="\"dtH1\"" }
style(h2)	{ elem = h1 toc = 2 .class="\"dtH1\"" }
style(h3)	{ elem = h1 toc = 3 .class="\"dtH1\"" }
style(h4)	{ elem = h1 toc = 4 .class="\"dtH1\"" }
style(h5)	{ elem = h1 toc = 5 .class="\"dtH1\"" }
style(h6)	{ elem = h1 toc = 6 .class="\"dtH1\"" }
style(h7)	{ elem = h2 .class="\"dtH2\"" }
style(h8)	{ elem = h3 .class="\"dtH3\"" }
style(h9)	{ elem = h4 .class="\"dtH4\"" }

; ==================================================================
; Paragraph Styles for First-Order Content

style(l)	{ if %intable%	{ elem = th }
		  else		{ elem = p .class = "\"label\"" maxlist = 0 }
		}
style(lp)	{ elem = p   .class = "\"labelproc\"" maxlist = 0 }
style(t)	{ elem = p                            maxlist = 0 }
style(ti)	{ elem = blockquote .class = "\"dtBlock\"" maxlist = 0 }
style(at)	{ elem = blockquote .class = "\"dtBlock\"" maxlist = 0 }
style(s)	{ elem = pre .class = "\"syntax\""    maxlist = 0 replacespaces = 1 expandtabs = 3 }
style(c)	{ elem = pre .class = "\"code\""      maxlist = 0 replacespaces = 1 expandtabs = 3 }
style(tf)	{ elem = p   .class = "\"fineprint\"" maxlist = 0 end = "</p>" }
style(copy)	{ elem = p   .class = "\"fineprint\"" maxlist = 0 }
style(normal)	{ elem = p   .class = "\"normal\""    maxlist = 0 }
style(fig)	{ elem = p   .class = "\"fig\"" } 
style(fimp)	{ elem = p   .class = "\"fimp\"" } 

; ==================================================================
; Paragraph Styles for Second-Order Content (List One and Term List)

style(nl1)	{ elem = ol   ol.type = "\"1\""       maxlist = 1 }
style(bl1)	{ elem = ul   ul.type = "\"disc\""    maxlist = 1 }
style(l1)	{ elem = p   .class = "\"label\""     maxlist = 1 }
style(t1)	{ elem = p                            maxlist = 1 }
style(at1)	{ elem = blockquote .class = "\"dtBlock\"" maxlist = 1 }
style(c1)	{ elem = pre .class = "\"code\""      maxlist = 1 replacespaces = 1 expandtabs = 3 }
style(tf1)	{ elem = p   .class = "\"fineprint\"" maxlist = 1 end = "</p>" }
style(dt)	{ elem = dt                           maxlist = 1 }
style(d)	{ elem = dd                           maxlist = 1 }
style(fig1)	{ elem = p   .class = "\"fig1\""      maxlist = 1 } 

; ==================================================================
; Paragraph Styles for Third-Order Content (List Two)

style(nl2)	{ elem = ol   ol.type = "\"a\""       maxlist = 2 }
style(bl2)	{ elem = ul   ul.type = "\"disc\""    maxlist = 2 }
style(l2)	{ elem = p   .class = "\"label\""     maxlist = 2 }
style(t2)	{ elem = p                            maxlist = 2 }
style(at2)	{ elem = blockquote .class = "\"dtBlock\"" maxlist = 2 }
style(c2)	{ elem = pre .class = "\"code\""      maxlist = 2 replacespaces = 1 expandtabs = 3 }
style(tf2)	{ elem = p   .class = "\"fineprint\"" maxlist = 2 end = "</p>" }
style(fig2)	{ elem = p   .class = "\"fig2\""      maxlist = 2 } 

; ==================================================================
; Character Styles

cstyle(le)	{ start = "<b>"       end = "</b>"        .class = "\"le\"" implied="b" }
cstyle(cfe)	{ start = "<code><b>" end = "</b></code>" .class = "\"cfe\"" implied = "b code" }
cstyle(ce)	{ start = "<code>"    end = "</code>"     .class = "\"ce\"" implied = "code" }

; ==================================================================
; Miscellaneous

elem(body)	{ start = "<body topmargin=0 id=\"bodyID\" class = \"dtBODY\">" }
elem(ol)	{ .start="" .value="" }
elem(li)	{ end = "</li>\r\n" .value="" }
elem(dd)	{ end = "</dd>\r\n" }
elem(pre)	{ implied = "code" }
elem(table)	{ start = "<div class=\"tablediv\"><table>\r\n" end = "</table></div>\r\n" 
		  .class = "\"dtTABLE\"" .cellspacing="\"0\"" 
		  .cols = "" .width = "" .border = "" .frame = "" .rules = "" }

; ==================================================================
; Multilanguage Marker Styles

cstyle(mma)	{
		.class = "\"lang\""
		implied = "u b i code"
		}
style(mmeb) 	{
		start = "<div class=filtered><span class=\"lang\">"
		end = "</span>\r\n"
		}
style(mmee)	{
		p::start = "</div><!-- "
		p::end = " -->\r\n" 
		}
style(*)	{ maxlist = 0 }  


; ================================================================
; Styles not specified in the CSM for good reason

; Without a TS setting, Spider ignores the blank TS paragraphs in writing HTML
; style(ts)	{ start = "<!--"   end = "-->"        maxlist = 2 }

; character styles automatically handled by Spider
;cstyle(b)	{ start = "<b>"     end = "</b>"     implied="b" }   ;doing via CSM fails on fixed-width fonts
;cstyle(bi)	{ start = "<b><i>"  end = "</i></b>" implied="b i" } ;doing via CSM fails on fixed-width fonts
;cstyle(i)	{ start = "<i>"     end = "</i>"     implied="i" }   ;doing via CSM fails on fixed-width fonts
;cstyle(sub)	{ start = "<sub>"   end = "</sub>"   implied="SUB" } ;doing via CSM fails on fixed-width fonts
;cstyle(sup)	{ start = "<sup>"   end = "</sup>"   implied="SUP" } ;doing via CSM fails on fixed-width fonts
;cstyle(strike)	{ start ="<strike>" end = "</strike>" } 

; Print Styles that should not be used in online files
;style(f)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(h)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(idx1)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(idx2)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(idx3)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(ih)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(pdn)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(pdt)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(pms)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(slug)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(toc1)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(toc2)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(toc3)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(toc4)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;cstyle(pn)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }

; Plumbing styles that should not be used in VS7 online files
;style(glt)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(ct)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;style(ft)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;cstyle(cr)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
;cstyle(fr)	{ start = "<!--PrintStyle: " end = "-->" maxlist = 0 }
